name: PHP tests

on:
  push:
  workflow_dispatch:
  pull_request:
    branches: [ master ]


jobs:
  validate-composer:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: [7.4, 8.1]
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        uses: php-actions/composer@v6
        with:
          php_version: ${{ matrix.php-version }}
          php_extensions: json

      - name: Validate composer.json and composer.lock
        uses: php-actions/composer@master
        with:
          php_version: ${{ matrix.php-version }}
          php_extensions: json
          command: validate

  phpstan:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: [7.4, 8.1]
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        uses: php-actions/composer@master
        with:
          php_version: ${{ matrix.php-version }}
          php_extensions: json

      - name: Run phpstan
        run: vendor/bin/phpstan -cphpstan.neon


  phpunit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: [7.4, 8.1]
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: testdb
          MYSQL_HOST: 127.0.0.1
          MYSQL_ROOT_PASSWORD: qqq
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        uses: php-actions/composer@master
        with:
          php_version: ${{ matrix.php-version }}
          php_extensions: json

      - name: Run unit tests
        run: php -v && vendor/bin/phpunit -c phpunit.xml

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: test/results/**/*.xml
          report_individual_runs: "true"